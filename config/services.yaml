# This file is the entry point to configure your own services.
# Files in the packages/ subdirectory configure your dependencies.

# Put parameters here that don't need to change on each machine where the app is deployed
# https://symfony.com/doc/current/best_practices.html#use-parameters-for-application-configuration
parameters:
    timezone: 'Europe/Warsaw'

services:
    # default configuration for services in *this* file
    _defaults:
        autowire: true      # Automatically injects dependencies in your services.
        autoconfigure: true # Automatically registers your services as commands, event subscribers, etc.
        bind:
            $olxPartnerApiUrl: '%env(OLX_PARTNER_API_URL)%'
            $olxPartnerClientId: '%env(OLX_PARTNER_CLIENT_ID)%'
            $olxPartnerClientSecret: '%env(OLX_PARTNER_CLIENT_SECRET)%'
            $olxPublicApiUrl: '%env(OLX_PUBLIC_API_URL)%'
            $dashboardUrl: '%env(DASHBOARD_URL)%'
            $contactHelpEmail: '%env(CONTACT_HELP_EMAIL)%'
            $mailerSendFrom: '%env(MAILER_SEND_FROM)%'

    # makes classes in src/ available to be used as services
    # this creates a service per class whose id is the fully-qualified class name
    App\:
        resource: '../src/'
        exclude:
            - '../src/DependencyInjection/'
            - '../src/Entity/'
            - '../src/Kernel.php'

    # add more service definitions when explicit configuration is needed
    # please note that last definitions always *replace* previous ones

    acme_api.event.authentication_success_listener:
        class: App\EventListener\AuthenticationSuccessListener
        tags:
            - { name: kernel.event_listener, event: lexik_jwt_authentication.on_authentication_success, method: onAuthenticationSuccessResponse }

    # OLX Partner API Logger
    app.olx_partner_api.logger.doctrine_handler:
        class: App\OlxPartnerApi\Logger\DoctrineHandler
        arguments:
            - "@doctrine.orm.entity_manager"

    # OLX Public API Logger
    app.olx_public_api.logger.doctrine_handler:
        class: App\OlxPublicApi\Logger\DoctrineHandler
        arguments:
            - "@doctrine.orm.entity_manager"

    # Integration Logger
    app.logger.integration_doctrine_handler:
        class: App\Logger\IntegrationDoctrineHandler
        arguments:
            - "@doctrine.orm.entity_manager"

    _instanceof:
        App\Integration\IntegrationInterface:
            tags: [ 'app.integration_handler' ]

    App\Integration\IntegrationFactory:
        arguments:
            - !tagged_iterator app.integration_handler