{% extends '@!EasyAdmin/layout.html.twig' %}

{% block body_id 'easyadmin-dashboard' %}

{% block main %}

    <style>
        .hidden{
            display: none;
        }
    </style>

<h1>Welcome back, %name%</h1>

    <div class="row">
        <div class="col-md-6">

            <br/><br/>
            <h3>Select city:</h3>
            <label for="countryRegions">Region:</label>
            <select id="countryRegions" class="selectpicker">
                <option data-id="null">--select--</option>
                {% for region in countryRegions %}
                    <option data-id="{{ region.getId() }}">{{ region.getName() }}</option>
                {% endfor %}
            </select>
            <br/><br/>
            <label for="cities">City:</label>
            <select id="cities" class="selectpicker" data-live-search="true"></select>


            <br/><br/><br/>
            <h3>Select category:</h3>
            <label for="mainCategories">Main category:</label>
            <select id="mainCategories" class="selectpicker">
                <option data-id="null">--select--</option>
                {% for category in mainCategories %}
                    <option data-id="{{ category.id }}" data-has-children="{{ category.hasChildren }}">{{ category.name }}</option>
                {% endfor %}
            </select>
            <br/><br/>

            <div id="firstSubcategoryContainer" class="hidden">
                <label for="firstSubcategory">First subcategory:</label>
                <select id="firstSubcategory" class="selectpicker"></select>
            </div>
            <br/>

            <div id="secondSubcategoryContainer" class="hidden">
                <label for="secondSubcategory">Second subcategory:</label>
                <select id="secondSubcategory" class="selectpicker"></select>
            </div>

            <br/><br/>
            <h3>Select attributes:</h3>
            <div id="categoryAttributesContainer"></div>
            <br/>

            <button id="createWorker" class="btn btn-primary">Create</button>


            <div class="card" style="background-color: darkolivegreen">
                <div class="card-header">
                    <h3 class="card-title">
                        <i class="fa fa-chart-bar"></i> Your active workers
                    </h3>
                </div>
            </div>

        </div>
    </div>

    <script>

        var categoryAttributes = {};

        $(document).ready(function(){

            $('#countryRegions').on('change', function(e){
                $.ajax({
                    url: "/api/city",
                    type: 'GET',
                    data: {countryRegion: this.options[this.selectedIndex].dataset.id},
                    success: function(response){
                        cityOptions = '<option data-id="null">--select--</option>';
                        for(var i = 0; i < response.length; i++){
                            cityOptions += '<option data-id="'+response[i].id+'">'+response[i].name+'</option>';
                        }
                        $('#cities').selectpicker('val', '--select--').html(cityOptions).selectpicker('refresh').selectpicker('render');
                    }
                });
            });

            $('#mainCategories').on('change', function(e){
                $.ajax({
                    url: "/api/category/" + this.options[this.selectedIndex].dataset.id + "/subcategories",
                    type: 'GET',
                    data: {},
                    success: function(response){
                        subcategoryOptions = '<option data-id="null">--select--</option>';
                        for(var i = 0; i < response.length; i++){
                            subcategoryOptions += '<option data-id="'+response[i].id+'">'+response[i].name+'</option>';
                        }
                        $('#firstSubcategory').selectpicker('val', '--select--').html(subcategoryOptions).selectpicker('refresh').selectpicker('render');
                        $('#firstSubcategoryContainer').removeClass('hidden');
                    }
                });
            });

            $('#firstSubcategory').on('change', function(e){

                var categoryId = this.options[this.selectedIndex].dataset.id;

                $.ajax({
                    url: "/api/category/" + this.options[this.selectedIndex].dataset.id + "/subcategories",
                    type: 'GET',
                    data: {},
                    success: function(response){
                        subcategoryOptions = '<option data-id="null">--select--</option>';
                        for(var i = 0; i < response.length; i++){
                            subcategoryOptions += '<option data-id="'+response[i].id+'">'+response[i].name+'</option>';
                        }
                        $('#secondSubcategory').selectpicker('val', '--select--').html(subcategoryOptions).selectpicker('refresh').selectpicker('render');
                        $('#secondSubcategoryContainer').removeClass('hidden');
                    },
                    error:function (xhr){
                        if(xhr.status === 404) {
                            $.ajax({
                                url: "/api/category/" + categoryId + "/attributes",
                                type: 'GET',
                                data: {},
                                success: function(response){
                                    renderCategoryAttributes(response);
                                }
                            });
                        }
                    }
                });
            });

            $('#secondSubcategory').on('change', function(e){
                $.ajax({
                    url: "/api/category/" + this.options[this.selectedIndex].dataset.id + "/attributes",
                    type: 'GET',
                    data: {},
                    success: function(response){
                        renderCategoryAttributes(response);
                    }
                });
            });

            $(document).on('change', '.categoryAttributes', function(){

                if($(this).attr('type') === 'number'){
                    var attribute = this.id.split('-')[1] + ":" +  this.id.split('-')[2];
                    var code = parseInt(this.value);
                    categoryAttributes[attribute] = code;
                    return;
                }

                var codes = $(this).find("option:selected");
                var attribute = this.options[this.selectedIndex].dataset.attribute;
                var code = this.options[this.selectedIndex].dataset.code;

                if(codes.length > 1){
                    categoryAttributes[attribute] = [];
                    for(var i = 0; i < codes.length; i++){

                        if(codes[i].dataset.code !== 'null'){
                            categoryAttributes[attribute].push(codes[i].dataset.code);

                        }else if(codes[i].dataset.code === 'null'){
                            delete categoryAttributes[attribute]
                            break;

                        }else{
                            categoryAttributes[attribute] = codes[i].dataset.code;
                        }
                    }

                }else{
                    if (code === 'null') {
                        delete categoryAttributes[attribute];
                    } else {
                        categoryAttributes[attribute] = code;
                    }
                }
            });

            function renderCategoryAttributes(attributes){
                var attributesHtml = '';

                for(var i = 0; i < attributes.length; i++){

                    if(attributes[i].validation.numeric === false){
                        attributesHtml += '<label for="categoryAttribute-'+attributes[i].code+'">'+attributes[i].label+':</label> ';

                        if(attributes[i].validation.allow_multiple_values === true) {
                            attributesHtml += '<select id="categoryAttribute-' + attributes[i].code + '" class="selectpicker categoryAttributes" multiple>';
                        }else{
                            attributesHtml += '<select id="categoryAttribute-' + attributes[i].code + '" class="selectpicker categoryAttributes">';
                        }
                        attributesHtml += '</select><br/><br/>';

                    }else if(attributes[i].validation.numeric === true){

                        attributesHtml += '<div style="display: flex; flex-direction: row; justify-content: space-between; align-items: center">'
                        attributesHtml += '<label for="categoryAttribute-'+attributes[i].code+'-from">'+attributes[i].label+' (od):</label> ';
                        attributesHtml += '<input' +
                            ' type="number"' +
                            ' id="categoryAttribute-' + attributes[i].code + '-from"' +
                            ' class="categoryAttributes"' +
                            ' min="' + attributes[i].validation.min + '"' +
                            ' max="' + attributes[i].validation.max + '"' +
                            ' placeholder="' + attributes[i].unit + '"' +
                            '><br/><br/>';

                        attributesHtml += '<label for="categoryAttribute-'+attributes[i].code+'-to">'+attributes[i].label+' (do):</label> ';
                        attributesHtml += '<input' +
                            ' type="number"' +
                            ' id="categoryAttribute-' + attributes[i].code + '-to"' +
                            ' class="categoryAttributes"' +
                            ' min="' + attributes[i].validation.min + '"' +
                            ' max="' + attributes[i].validation.max + '"' +
                            ' placeholder="' + attributes[i].unit + '"' +
                            '><br/><br/>';
                        attributesHtml += '</div>'
                    }
                }

                $('#categoryAttributesContainer').html(attributesHtml);

                for (var i = 0; i < attributes.length; i++) {
                    if(attributes[i].validation.numeric === false){
                        var options = '';
                        options += '<option data-attribute="' + attributes[i].code + '" data-code="null">(any)</option>';
                        for (var j = 0; j < attributes[i].values.length; j++) {
                            options += '<option data-attribute="' + attributes[i].code + '" data-code="' + attributes[i].values[j].code + '">' + attributes[i].values[j].label + '</option>';
                        }
                        $('#categoryAttribute-' + attributes[i].code).selectpicker('val', '(any)').html(options).selectpicker('refresh').selectpicker('render');
                    }
                }
            }

            $('#createWorker').on('click', function(e){

                var data = {
                    city: $('#cities').find("option:selected").data('id'),
                    firstSubcategory: $('#firstSubcategory').find("option:selected").data('id'),
                    secondSubcategory: $('#secondSubcategory').find("option:selected").data('id'),
                    attributes: categoryAttributes
                };

                $.ajax({
                    url: "/api/worker",
                    type: 'POST',
                    contentType: 'application/json',
                    dataType: 'json',
                    data: JSON.stringify(data),
                    success: function(response){
                        console.log(response);
                    }
                });
            });

        });
    </script>
{% endblock %}